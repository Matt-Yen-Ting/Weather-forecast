plugins {
    id 'com.android.application'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-parcelize"
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.weather.weatherforecast"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation "com.github.kirich1409:viewbindingpropertydelegate:$view_binding_delegate"

    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.core:core-ktx:$core_ktx_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx"
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.test:runner:1.4.0'
    implementation 'com.google.ar:core:1.33.0'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    implementation "com.slack.eithernet:eithernet:$eithernet_version"

    api "com.squareup.moshi:moshi:$moshi_version"
    api "com.squareup.moshi:moshi-adapters:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    implementation "io.coil-kt:coil:$coil_version"

    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation "com.google.android.material:material:$material_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "com.google.truth:truth:$google_truth_version"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test.ext:junit:1.1.3"
//For runBlockingTest, CoroutineDispatcher etc.
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.3"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'

}